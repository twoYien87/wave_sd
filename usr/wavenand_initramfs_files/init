#!/ics_rec_init/sbin/busybox sh

export _PATH="$PATH"
export PATH=/

# set busybox location, save busybox as we will move directories
/ics_rec_init/sbin/busybox cp /ics_rec_init/sbin/recovery /busybox
BB="/busybox"

# initialize working dir and log
$BB cd /
$BB date >>boot.txt
exec >>boot.txt 2>&1

$BB rm init
$BB mkdir proc
$BB mkdir sys
$BB mkdir system 
$BB mkdir cache
$BB mkdir data 
$BB mkdir etc 
$BB mkdir /dev
$BB mkdir /dev/block
$BB chown -R 0:0 *
$BB chmod 755 dev dev/block proc system data cache sys

$BB mknod /dev/null c 1 3
$BB mknod /dev/zero c 1 5
$BB mknod /dev/block/zram0 b 253 0
$BB mknod /dev/block/mmcblk0 b 179 0
$BB mknod /dev/block/mmcblk0p1 b 179 1
$BB mknod /dev/block/mmcblk0p2 b 179 2
$BB mknod /dev/block/mmcblk0p3 b 179 3
$BB mknod /dev/block/mmcblk0p4 b 179 4 
$BB mknod /dev/urandom c 1 9
$BB chmod 644 dev/block/mmcblk0 dev/block/mmcblk0p1 dev/block/mmcblk0p2 dev/block/mmcblk0p3 dev/block/mmcblk0p4 dev/urandom dev/null dev/zero
$BB chown -R 0:0 *

$BB mount -t proc proc /proc
$BB mount -t sysfs sysfs /sys

$BB mv /files/charger /
$BB mv /files/init /

$BB cat /proc/mounts  > /etc/mtab
if ! $BB fdisk -l /dev/block/mmcblk0 | $BB grep "/dev/block/mmcblk0p4"

then

$BB fdisk /dev/block/mmcblk0 << EOF > /dev/null 2>&1
d
2
n
p
2

+200M
n
p
3

+390M
n
p


w
EOF
/ics_rec_init/sbin/fsck.ext4 -fy /dev/block/mmcblk0p2
/ics_rec_init/sbin/fsck.ext4 -fy /dev/block/mmcblk0p3
/ics_rec_init/sbin/fsck.ext4 -fy /dev/block/mmcblk0p4
/ics_rec_init/sbin/mkfs.ext4 -O ^ext_attr,^has_journal,^huge_file -b 4096 /dev/block/mmcblk0p2
/ics_rec_init/sbin/tune2fs.ext4 -o journal_data_writeback /dev/block/mmcblk0p2
/ics_rec_init/sbin/mkfs.ext4 -O ^ext_attr,^has_journal,^huge_file -b 4096 /dev/block/mmcblk0p3
/ics_rec_init/sbin/tune2fs.ext4 -o journal_data_writeback /dev/block/mmcblk0p3
/ics_rec_init/sbin/mkfs.ext4 -O ^ext_attr,^has_journal,^huge_file -b 4096 /dev/block/mmcblk0p4
/ics_rec_init/sbin/tune2fs.ext4 -o journal_data_writeback /dev/block/mmcblk0p4
/ics_rec_init/sbin/fsck.ext4 -Dfy /dev/block/mmcblk0p2
/ics_rec_init/sbin/fsck.ext4 -Dfy /dev/block/mmcblk0p3
/ics_rec_init/sbin/fsck.ext4 -Dfy /dev/block/mmcblk0p4
$BB mount -t ext4 -o noatime,nodiratime,nosuid,nodev,barrier=0,noauto_da_alloc /dev/block/mmcblk0p2 /cache
$BB mount -t ext4 -o noatime,nodiratime,barrier=0,noauto_da_alloc /dev/block/mmcblk0p3 /system
$BB mount -t ext4 -o noatime,nodiratime,nosuid,nodev,barrier=0,noauto_da_alloc /dev/block/mmcblk0p4 /data
$BB reboot
else
/ics_rec_init/sbin/fsck.ext4 -y /dev/block/mmcblk0p2
/ics_rec_init/sbin/tune2fs.ext4 -o journal_data_writeback /dev/block/mmcblk0p2
$BB mount -t ext4 -o noatime,nodiratime,nosuid,nodev,barrier=0,noauto_da_alloc /dev/block/mmcblk0p2 /cache
$BB mount -t ext4 -o noatime,nodiratime,barrier=0,noauto_da_alloc /dev/block/mmcblk0p3 /system
$BB mount -t ext4 -o noatime,nodiratime,nosuid,nodev,barrier=0,noauto_da_alloc /dev/block/mmcblk0p4 /data
$BB chmod 771 /system
$BB chmod 771 /data
$BB chmod 771 /cache
fi

$BB echo 90000000 > /sys/block/zram0/disksize
$BB mkswap /dev/block/zram0
$BB swapon /dev/block/zram0


$BB mkdir -p /data/local/devil
KV=`$BB uname -r`
$BB echo "version: $KV"

CUR=`$BB cat /proc/version`
if $BB [ -e /system/last_version ]; then
SAV=`$BB cat /system/last_version`
else
SAV=unknown
fi
$BB echo "command line:"
$BB cat /proc/cmdline

$BB echo "starting bootmode detection..."
if $BB grep -q bootmode=2 /proc/cmdline || $BB grep -q bootmode=9 /proc/cmdline ; then
    $BB rm -rf /etc
    $BB mv /ics_rec_init/* /
    else
    $BB rm -rf /etc
    $BB mv /ics_init/* /
fi
$BB cp files/modules/*.so /system/lib/
# remove cam apk for 302mo no needed if u use 290 or 280 uncheck it
$BB rm /system/app/Gallery2.apk
$BB umount /sys
$BB umount /proc
$BB rm -rf /files
$BB rm -rf /ics_init
$BB rm -rf /ics_rec_init
$BB date >>boot.txt
$BB rm -fr /dev/*


# finally remove busybox
$BB rm /busybox

export PATH="${_PATH}"
exec /init
