#!/stage1/busybox sh
export _PATH="$PATH"
export PATH=/stage1

busybox cd /
busybox date >>boot.txt
exec >>boot.txt 2>&1
busybox rm init
busybox mount -t proc proc /proc
busybox mount -t sysfs sysfs /sys

for i in $(busybox seq 1 5) ; do
if busybox test -d /sys/dev/block/179:0 ; then
break
else
echo "Waiting for internal mmc..."
echo $i;
busybox sleep 1
fi
done

/lvm/sbin/lvm vgscan --mknodes --ignorelockingfailure
/lvm/sbin/lvm vgchange -aly --ignorelockingfailure

busybox mount -t ext4 /dev/lvpool/userdata /data
busybox mount -t yaffs2 /dev/block/mtdblock3 /cache

####################################################################
########## mount system partition depending on selection ###########
####################################################################
if busybox test -f /data/dualboot/rom ; then
	if busybox grep -q secondary /data/dualboot/rom ; then
		busybox mount -t ext4 /dev/lvpool/secondary_system /system
		busybox mkdir -p /data/secondary_system
	elif busybox grep -q primary /data/dualboot/rom ; then
		busybox mount -t ext4 /dev/lvpool/system /system
		busybox mkdir -p /data/primary_system
	else 
		echo "no rom selected..."
		echo "booting to recovery"
	fi
else
		busybox mkdir -p /data/dualboot
		busybox touch /data/dualboot/rom
		busybox echo "emergency" > /data/dualboot/rom
		echo "no rom selected..."
		echo "booting to recovery"
fi

#####################################################################	

image=/stage1/ramdisk.img
bootmode=system

busybox echo "starting bootmode detection..."
busybox echo "command line:"
busybox cat /proc/cmdline
if busybox test -e /cache/.startrecovery ||
	busybox grep -q emergency /data/dualboot/rom ||
	busybox grep -q bootmode=2 /proc/cmdline || # normal mode
	busybox grep -q bootmode=5 /proc/cmdline || # xl mem
	busybox grep -q bootmode=9 /proc/cmdline || # big mem
	busybox grep -q bootmode=13 /proc/cmdline; then # no cam
    # recovery boot
    busybox echo "found recovery command, preparing boot..."

	busybox rm -fr /cache/.startrecovery
	image=/stage1/ramdisk-recovery.img
	bootmode=recovery

	# disable lpm
	busybox echo 0 > /sys/class/power_supply/battery/charging_mode_booting
elif ! busybox test -e /system/build.prop ; then
	# emergency boot
	busybox umount /cache
	erase_image cache
	busybox mount -t yaffs2 /dev/block/mtdblock3 /cache
	busybox mkdir /cache/recovery

	busybox mount -t vfat /dev/block/mmcblk0p1 /sdcard	

	UPDATE=$(busybox cat /sdcard/cyanogenmod.cfg)

	if busybox test -n "$UPDATE" && busybox test -e $UPDATE ; then
		busybox echo "install_zip(\"`echo $UPDATE`\");" > /cache/recovery/extendedcommand
	fi

	image=/stage1/ramdisk-recovery.img
	bootmode=recovery

	# disable lpm
	busybox echo 0 > /sys/class/power_supply/battery/charging_mode_booting
fi

busybox umount /cache
busybox umount /sdcard
busybox rmdir /sdcard

busybox zcat $image | busybox cpio -i

	if busybox [ "$bootmode" = "system" ] ; then
		if busybox grep -q secondary /data/dualboot/rom ; then
			busybox mv fstab.aries.secondary fstab.aries
		else 
			busybox mv fstab.aries.primary fstab.aries
		fi
	elif busybox [ "$bootmode" = "recovery" ] ; then
		busybox mount -t yaffs2 /dev/block/mtdblock3 /cache
		if busybox test -e /cache/dualboot/unsecure_recovery ; then
			if busybox grep -q secondary /cache/dualboot/unsecure ; then
				busybox mv etc/recovery.fstab.secondary etc/recovery.fstab
			elif busybox grep -q primary /cache/dualboot/unsecure ; then
				busybox mv etc/recovery.fstab.primary etc/recovery.fstab
			fi
			
			busybox rm -rf /cache/dualboot/unsecure_recovery
			busybox umount /cache
		fi
	fi


################ apply bigmem at first boot ##################################################################

bigmem=0

	if busybox [ -e /data/local/devil/bigmem ] ; then
	bigmem=`busybox cat /data/local/devil/bigmem`
		if busybox grep -q bootmode=0 /proc/cmdline; then
			if busybox [ "$bigmem" -eq 1 ] || busybox [ "$bigmem" -eq 2 ] || busybox [ "$bigmem" -eq 3 ] ; then
				busybox echo $bigmem > /sys/kernel/bigmem/enable
    				busybox umount /data
				/system/bin/toolbox reboot
			fi
		fi
	fi

##############################################################################################################	

	if busybox grep -q bootmode=3 /proc/cmdline || 
		busybox grep -q bootmode=5 /proc/cmdline; then
    		busybox echo "copying XL_mem libs"
    			busybox cp bigmem_libs/*.so /system/lib/
    		busybox echo 1 > /sys/kernel/bigmem/enable

	elif busybox grep -q bootmode=7 /proc/cmdline || 
		busybox grep -q bootmode=9 /proc/cmdline; then
    		busybox echo "copying XL_mem libs"
    			busybox cp bigmem_libs/*.so /system/lib/
    		busybox echo 2 > /sys/kernel/bigmem/enable
	elif busybox grep -q bootmode=11 /proc/cmdline || 
		busybox grep -q bootmode=13 /proc/cmdline; then
    		busybox echo 3 > /sys/kernel/bigmem/enable
	else
    		busybox echo "copying cm default libs"
    			busybox cp default_libs/*.so /system/lib/
	fi
busybox umount /system
busybox umount /data

if busybox grep -q 1 /sys/class/power_supply/battery/charging_mode_booting ; then
	# low power mode
	busybox cp lpm.rc init.rc
	busybox rm init.aries.rc
fi

busybox umount /sys
busybox umount /proc
busybox date >>boot.txt
busybox rm -fr /stage1 /dev/*
export PATH="${_PATH}"
exec /init
